"""create wallet

Revision ID: 644a08f138ef
Revises: 1a2030e64dac
Create Date: 2024-08-03 13:11:26.779537

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "644a08f138ef"
down_revision = "1a2030e64dac"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "wallets",
        sa.Column(
            "crypto_currency", sa.Enum("BTC", "ETH", "USDT", name="cryptocurrency"), nullable=False
        ),
        sa.Column(
            "trading_currency",
            postgresql.ENUM(
                "USD", "EUR", "AED", "CFA", "GNF", "RMB", name="currency", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("walletID", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column("crypto_balance", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("trading_balance", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.PrimaryKeyConstraint("walletID"),
    )
    op.create_table(
        "foreign_exchanges",
        sa.Column("amount", sa.Numeric(precision=19, scale=3), nullable=False),
        sa.Column("rate", sa.Numeric(precision=10, scale=6), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column(
            "state",
            postgresql.ENUM(
                "REVIEW",
                "PENDING",
                "PAID",
                "CANCELLED",
                "REJECTED",
                name="transactionstate",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "type",
            postgresql.ENUM(
                "DEPOSIT",
                "INTERNAL",
                "EXTERNAL",
                "SENDING",
                "FOREX",
                name="transactiontype",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("org_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("reviwed_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("history", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("notes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("account", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("paid", sa.Numeric(precision=19, scale=3), nullable=False),
        sa.Column("is_buying", sa.Boolean(), nullable=False),
        sa.Column("wallet_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("initial_balance_pc", sa.Numeric(precision=19, scale=3), nullable=False),
        sa.Column("initial_balance_wc", sa.Numeric(precision=19, scale=3), nullable=False),
        sa.ForeignKeyConstraint(
            ["account"],
            ["accounts.initials"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviwed_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallets.walletID"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("foreign_exchanges")
    op.drop_table("wallets")
    # ### end Alembic commands ###

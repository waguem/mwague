"""reinit tables

Revision ID: 6d6d78ccc99b
Revises:
Create Date: 2024-07-16 04:51:34.352417

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "6d6d78ccc99b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organizations",
        sa.Column("initials", sqlmodel.sql.sqltypes.AutoString(length=8), nullable=False),
        sa.Column("org_name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "payments",
        sa.Column("payment_date", sa.Date(), nullable=False),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("transaction_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum("DEPOSIT", "INTERNAL", "EXTERNAL", "SENDING", "FOREX", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("state", sa.Enum("PAID", "CANCELLED", name="paymentstate"), nullable=False),
        sa.Column("notes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "offices",
        sa.Column("country", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column("initials", sqlmodel.sql.sqltypes.AutoString(length=8), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("organization_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("currencies", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "agents",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("initials", sqlmodel.sql.sqltypes.AutoString(length=4), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(length=16), nullable=False),
        sa.Column("country", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column("type", sa.Enum("AGENT", "SUPPLIER", name="agenttype"), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("org_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_agent_initials", "agents", ["initials", "org_id", "office_id"], unique=True)
    op.create_table(
        "employees",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("roles", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("organization_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("provider_account_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(
        "ix_employee_username",
        "employees",
        ["office_id", "username", "organization_id"],
        unique=True,
    )
    op.create_table(
        "accounts",
        sa.Column(
            "type",
            sa.Enum("AGENT", "SUPPLIER", "OFFICE", "FUND", name="accounttype"),
            nullable=False,
        ),
        sa.Column(
            "currency",
            sa.Enum("USD", "EUR", "AED", "CFA", "GNF", "RMB", name="currency"),
            nullable=False,
        ),
        sa.Column("initials", sqlmodel.sql.sqltypes.AutoString(length=4), nullable=False),
        sa.Column("balance", sa.Numeric(scale=3), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("owner_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("is_open", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("initials"),
    )
    op.create_table(
        "forex",
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("rate", sa.Numeric(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column(
            "state",
            sa.Enum("REVIEW", "PENDING", "PAID", "CANCELLED", "REJECTED", name="transactionstate"),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum("DEPOSIT", "INTERNAL", "EXTERNAL", "SENDING", "FOREX", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("org_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("reviwed_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("history", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("notes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("bid_rate", sa.Numeric(), nullable=False),
        sa.Column("offer_rate", sa.Numeric(), nullable=False),
        sa.Column(
            "method", sa.Enum("CASH", "BANK", "MOBILE", name="paymentmethod"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviwed_by"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "activities",
        sa.Column("started_at", sa.Date(), nullable=False),
        sa.Column(
            "state", sa.Enum("OPEN", "CLOSED", "PAUSED", name="activitystate"), nullable=False
        ),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("closed_at", sa.Date(), nullable=True),
        sa.Column("started_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("closed_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("openning_rate", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("closing_rate", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("openning_fund", sa.Numeric(), nullable=False),
        sa.Column("closing_fund", sa.Numeric(), nullable=False),
        sa.Column("account_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["closed_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["started_by"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "deposits",
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("rate", sa.Numeric(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column(
            "state",
            sa.Enum("REVIEW", "PENDING", "PAID", "CANCELLED", "REJECTED", name="transactionstate"),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum("DEPOSIT", "INTERNAL", "EXTERNAL", "SENDING", "FOREX", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("org_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("reviwed_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("history", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("notes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("owner_initials", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_initials"],
            ["accounts.initials"],
        ),
        sa.ForeignKeyConstraint(
            ["reviwed_by"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "externals",
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("rate", sa.Numeric(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column(
            "state",
            sa.Enum("REVIEW", "PENDING", "PAID", "CANCELLED", "REJECTED", name="transactionstate"),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum("DEPOSIT", "INTERNAL", "EXTERNAL", "SENDING", "FOREX", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("org_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("reviwed_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("history", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("notes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("sender_initials", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("charges", sa.Numeric(), nullable=False),
        sa.Column("customer", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviwed_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_initials"],
            ["accounts.initials"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "internals",
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("rate", sa.Numeric(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column(
            "state",
            sa.Enum("REVIEW", "PENDING", "PAID", "CANCELLED", "REJECTED", name="transactionstate"),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum("DEPOSIT", "INTERNAL", "EXTERNAL", "SENDING", "FOREX", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("org_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("reviwed_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("history", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("notes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("sender_initials", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("receiver_initials", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("charges", sa.Numeric(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["receiver_initials"],
            ["accounts.initials"],
        ),
        sa.ForeignKeyConstraint(
            ["reviwed_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_initials"],
            ["accounts.initials"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "sendings",
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("rate", sa.Numeric(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column(
            "state",
            sa.Enum("REVIEW", "PENDING", "PAID", "CANCELLED", "REJECTED", name="transactionstate"),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum("DEPOSIT", "INTERNAL", "EXTERNAL", "SENDING", "FOREX", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("office_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("org_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("reviwed_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("history", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("notes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("receiver_initials", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("bid_rate", sa.Numeric(), nullable=False),
        sa.Column("offer_rate", sa.Numeric(), nullable=False),
        sa.Column(
            "method", sa.Enum("CASH", "BANK", "MOBILE", name="paymentmethod"), nullable=False
        ),
        sa.Column(
            "payment_currency",
            sa.Enum("USD", "EUR", "AED", "CFA", "GNF", "RMB", name="currency"),
            nullable=False,
        ),
        sa.Column("charges", sa.Numeric(), nullable=False),
        sa.Column("customer_sender", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("customer_receiver", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_id"],
            ["offices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["receiver_initials"],
            ["accounts.initials"],
        ),
        sa.ForeignKeyConstraint(
            ["reviwed_by"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "fundcommits",
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("v_from", sa.Numeric(), nullable=False),
        sa.Column("variation", sa.Numeric(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
        sa.Column("activity_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("fundcommits")
    op.drop_table("sendings")
    op.drop_table("internals")
    op.drop_table("externals")
    op.drop_table("deposits")
    op.drop_table("activities")
    op.drop_table("forex")
    op.drop_table("accounts")
    op.drop_index("ix_employee_username", table_name="employees")
    op.drop_table("employees")
    op.drop_index("ix_agent_initials", table_name="agents")
    op.drop_table("agents")
    op.drop_table("offices")
    op.drop_table("payments")
    op.drop_table("organizations")
    # ### end Alembic commands ###

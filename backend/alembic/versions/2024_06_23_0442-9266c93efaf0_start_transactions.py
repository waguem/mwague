"""start_transactions

Revision ID: 9266c93efaf0
Revises: a6387b493462
Create Date: 2024-06-23 04:42:05.706708

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9266c93efaf0'
down_revision = 'a6387b493462'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('forex',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('rate', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sa.Enum('REVIEW', 'PENDING', 'PAID', 'CANCELLED', name='transactionstate'), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'INTERNAL', name='transactiontype'), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('office_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('org_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('bid_rate', sa.Numeric(), nullable=False),
    sa.Column('offer_rate', sa.Numeric(), nullable=False),
    sa.Column('method', sa.Enum('CASH', 'BANK', 'MOBILE', name='paymentmethod'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deposits',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('rate', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sa.Enum('REVIEW', 'PENDING', 'PAID', 'CANCELLED', name='transactionstate'), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'INTERNAL', name='transactiontype'), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('office_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('org_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('account_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('externals',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('rate', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sa.Enum('REVIEW', 'PENDING', 'PAID', 'CANCELLED', name='transactionstate'), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'INTERNAL', name='transactiontype'), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('office_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('org_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('sender_account_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['sender_account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('internals',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('rate', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sa.Enum('REVIEW', 'PENDING', 'PAID', 'CANCELLED', name='transactionstate'), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'INTERNAL', name='transactiontype'), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('office_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('org_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('sender_account_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('receiver_account_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['receiver_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['sender_account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sendings',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('rate', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sa.Enum('REVIEW', 'PENDING', 'PAID', 'CANCELLED', name='transactionstate'), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'INTERNAL', name='transactiontype'), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('office_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('org_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('receiver_account_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('bid_rate', sa.Numeric(), nullable=False),
    sa.Column('offer_rate', sa.Numeric(), nullable=False),
    sa.Column('method', sa.Enum('CASH', 'BANK', 'MOBILE', name='paymentmethod'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['receiver_account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sendings')
    op.drop_table('internals')
    op.drop_table('externals')
    op.drop_table('deposits')
    op.drop_table('forex')
    # ### end Alembic commands ###

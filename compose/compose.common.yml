services:
  db:
    image: postgres
    container_name: postgresdb
    pull_policy: always
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      BACKUP_DIR: /backup

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 2s
      retries: 10

  pgAdmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: bah.amadouth96@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_LISTEN_PORT: 80

  redis:
    image: redis
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 2s
      timeout: 2s
      retries: 10
    command: redis-server /usr/local/etc/redis/redis.conf

  backend:
    image: tiangolo/uvicorn-gunicorn-fastapi:python3.10
    working_dir: /backend

    volumes:
      - "../backend:/backend"
      - "../mkdi-shared:/mkdi-shared"
      - "../scripts/prestart.sh:/app/prestart.sh"
      - "../scripts/start-debug.sh:/start-reload.sh"

    command: /start-reload.sh

    env_file:
      - ./env/.backend.env

    depends_on:
      backenddb:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  bdd:
    build:
      context: ../bdd
      dockerfile: Dockerfile

    entrypoint: /run.sh http://backend:8080/api/v1/ping

    volumes:
      - "../bdd/tests:/app/tests"
      - "../bdd/run.sh:/run.sh"

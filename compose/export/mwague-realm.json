{
  "id": "b9261fc8-e6c8-41b9-a177-c428de00e872",
  "realm": "mwague",
  "displayName": "",
  "displayNameHtml": "",
  "notBefore": 1719725872,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 1800,
  "accessTokenLifespanForImplicitFlow": 1800,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 1800,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "eca5d015-e0b6-4370-a3f6-02575c5d745f",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "b9261fc8-e6c8-41b9-a177-c428de00e872",
        "attributes": {}
      },
      {
        "id": "27f07bf9-abea-4526-b1c0-72af8e748161",
        "name": "org_admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "b9261fc8-e6c8-41b9-a177-c428de00e872",
        "attributes": {
          "weight": ["1"]
        }
      },
      {
        "id": "daebb3fd-4658-4530-93a1-fb2d39f0f079",
        "name": "default-roles-mwague",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["manage-account", "view-profile"]
          }
        },
        "clientRole": false,
        "containerId": "b9261fc8-e6c8-41b9-a177-c428de00e872",
        "attributes": {}
      },
      {
        "id": "738ce103-60d2-4fad-aa72-08ceacce03f1",
        "name": "soft_admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "b9261fc8-e6c8-41b9-a177-c428de00e872",
        "attributes": {
          "weight": ["0"]
        }
      },
      {
        "id": "bfab83d3-14b2-4f13-8ce4-c8f449023da2",
        "name": "office_admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "b9261fc8-e6c8-41b9-a177-c428de00e872",
        "attributes": {
          "weight": ["2"]
        }
      },
      {
        "id": "7ebfdcab-b158-4ed6-b72a-ed1f7e8dca20",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "b9261fc8-e6c8-41b9-a177-c428de00e872",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "f0bdd1dc-e62c-47fa-b80f-249fca23e828",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "8153593b-1825-44e4-b362-f6fac83a6af4",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "63318789-a33f-43e6-83bf-7bf32bfb5a45",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "a305b1c7-8447-4a06-8906-b7620e15d7e7",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "75d5af94-d4a9-4c39-be83-83689ce6425b",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "748b31cd-14c3-417e-965f-070c96ddb550",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "cbf58440-be15-4a8b-9ecf-d0f96893872a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "119c4b6b-94a3-4455-8286-96eafc0ed7e2",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "73aeca85-0616-47ff-a221-0429706e0506",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "6963ec76-d889-4036-a3ff-dc3664151aca",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "ea0922a3-0f77-4b8f-82a1-14e58fbed1ff",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "9952f525-f249-4903-bee2-f058fb1d309f",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "fe0de46c-29dd-447d-b9bf-1517041080b6",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "04c64d01-50ff-4baa-bccf-0e0bcec63df5",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "c693a58d-df5b-4962-9cee-10ea94fc0e72",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "a6be2d6a-c5fe-4b03-834c-a48fd1ae93e8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "721645a2-5580-4242-9430-51938e969fdb",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "29ed7cd2-dc92-4ec0-86ca-d4dde8f1db69",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        },
        {
          "id": "18c2962c-8bac-47f6-9016-a50c63f3f312",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-clients",
                "manage-clients",
                "query-users",
                "manage-events",
                "manage-identity-providers",
                "view-realm",
                "query-groups",
                "view-identity-providers",
                "query-clients",
                "impersonation",
                "query-realms",
                "view-events",
                "view-users",
                "manage-users",
                "view-authorization",
                "create-client",
                "manage-authorization",
                "manage-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "93010f95-b701-497a-961d-0a6d4305fd28",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "rns:mwague:portal": [
        {
          "id": "2d918463-5358-4f90-bfeb-ab29ed523595",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "7a70d074-1873-400c-89ea-f75e60da9ad4",
          "attributes": {}
        }
      ],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "fc3578ff-d025-40a2-939d-9dcb6e4b584c",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "b31913d1-166a-4528-99a5-2eb03ae48e03",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "22a6fbb4-9b59-4ea5-a667-d845f7f98152",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        },
        {
          "id": "70a47d15-e9d8-4a35-b5d7-d5b327c5adf9",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        },
        {
          "id": "085b6818-cde7-472a-ade9-3006391690c2",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        },
        {
          "id": "515ae516-c394-44ec-881a-683eac8a3a8e",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        },
        {
          "id": "6c9a5122-8f94-4558-a3fb-66bfd3b23164",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        },
        {
          "id": "2b0af6f2-095e-4182-8622-73bef6205af8",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        },
        {
          "id": "cd24ae0b-fbc6-4958-acdb-b0585f3c2aed",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        },
        {
          "id": "3ab81d9f-4b2c-45e8-9132-1ca0ca3d4cc0",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "daebb3fd-4658-4530-93a1-fb2d39f0f079",
    "name": "default-roles-mwague",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "b9261fc8-e6c8-41b9-a177-c428de00e872"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "3828efeb-3bdf-45d7-895d-02cbdf24be72",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/mwague/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/mwague/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "52aeba40-e58f-4281-95e1-c6c8e48776b0",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/mwague/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/mwague/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "46bd3373-5327-4832-917a-29fc925bdd95",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b7f2417e-8325-4173-b135-0d0f6ba3a80a",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b31913d1-166a-4528-99a5-2eb03ae48e03",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "93010f95-b701-497a-961d-0a6d4305fd28",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7a70d074-1873-400c-89ea-f75e60da9ad4",
      "clientId": "rns:mwague:portal",
      "name": "Mwague client",
      "description": "",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "",
      "baseUrl": "http://localhost:3000/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "nZmLx40sO6x14lQ1vSCe1e9gH8VfEZAY",
      "redirectUris": ["http://localhost:8080/*", "http://localhost:3000/*"],
      "webOrigins": ["*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1717990996",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:3000/*",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "5efecad4-13ad-4f31-a7fb-23ee1cd7dde2",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f1fb6c4b-9815-4989-a2c6-b213f71a45dd",
          "name": "officeId",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "officeId",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "officeId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3d00dc4b-a6a3-4247-bc35-6113c44acc60",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c59a4255-33c7-45b2-92dd-4a5656c5c2e6",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "78ef6468-b179-4b07-8ccb-654859c08c47",
          "name": "organizationId",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "organizationId",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "organizationId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aec35d30-9707-4ff9-82c8-0919f05c8edb",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [],
        "policies": [],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "d132343a-1965-4c65-a814-632784b5f862",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/mwague/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/mwague/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "980e1161-cc82-4a6d-90aa-80f8b8e69553",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "f11a2ca9-0e70-48df-a0f8-7a311f73da11",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "3909fab1-cefb-4e8b-ba23-099165906266",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "96450c2c-8c25-4a12-b155-b23be30669ed",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "dac771ef-b112-4e9c-ad56-8100393280f0",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "2b6604bf-d51d-4141-83af-9f57535fc8d0",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "53fd4bee-4b74-4d4a-84fc-e3052e1e9afd",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "f6d0ba21-081c-41d0-a96e-3f8da4ace3f6",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "ae2380d1-35ef-4253-91f1-469188347084",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b72533ca-70c1-459d-9b83-6e2388866f41",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "06ffd199-ac98-4438-97a9-48248ca7c36b",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "715fb599-9c02-4406-b1a6-2f5bfac11649",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3eb2f805-583d-4c0d-b0a4-22b5bd00ac60",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cb67196f-72fc-4e6f-8dae-7b11ec4ffd8c",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "429e4f0d-5c08-4c35-a7fa-2b5b6c8f717a",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6d244f07-2b04-4ce9-89d8-b0e5226adadb",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d98d8c97-521a-4f7c-b3ec-d67fa196dac2",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ddd3dab9-b9b2-42a3-b7f1-8209ada8a9df",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "831be66b-7b60-48f3-b2cd-17b965c1135e",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "3713063a-87b9-48e3-afad-c262af8519b4",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "e6cd9081-efae-427d-b9c8-7920d6ee6bae",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "142695f1-4107-4c15-926b-04bd89ffed5d",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "af67a019-6dd4-4399-8575-e1f3f6aefd52",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "8124ed5b-3dfe-43fa-8ad9-6865d44d45d6",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b8402b80-c8a3-4a24-9d7d-7995d343fa0d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "66ff8755-c17a-4f46-9d36-92d3ecfed245",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f338fc58-f67a-4eb2-b4d9-69bd3fb6cdc2",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e5e2ae20-591b-4c09-b39b-49d9b6279085",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aa4b4dcd-091c-4c88-815f-3e8bff430aba",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1ac5b211-7172-4738-bbd4-c0ba85eaa419",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "19efab06-3123-48cc-8482-651c94d81d57",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d7a6666c-c454-4428-9eeb-be91563e1d4d",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f53df691-be3f-4455-aff7-7e8e358dfa23",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4cccced3-56f2-4405-8e11-331969a83937",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "af280259-07c2-4efe-86b4-29e863e889a9",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "227d8dfe-c33f-46e5-a17d-5775f27b0b81",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c189e553-5e37-4d49-a7cc-8fb7d9a977cf",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "a0b69a99-310d-4319-bdaa-10fd80180b00",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "0840fc1a-a1fd-40ae-ad40-775d2cb18b10",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8bf72151-2649-478a-9777-53ad6ed123d5",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "67562738-8518-45a4-bd2d-2c22479c710b",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "f44b2d1d-3a0d-4d05-bac4-7a10b80171d7",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "f09d78f5-cce5-40e1-91a7-862c575687c8",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "61d5e763-44aa-4d68-b3b1-3779e25af6e8",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "7935f0dd-3244-4d97-b7ad-8e6be4ee4759",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "d50fb33c-f224-4ede-80d1-4629c79c489d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "5820efe8-35cf-4ad6-93c3-cfc68f6c3ecb",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"organizationId\",\"displayName\":\"${organizationId}\",\"validations\":{\"length\":{\"min\":\"10\",\"max\":\"255\",\"trim-disabled\":\"true\"}},\"annotations\":{},\"required\":{\"roles\":[\"admin\",\"user\"]},\"permissions\":{\"view\":[\"admin\"],\"edit\":[\"admin\"]},\"multivalued\":false},{\"name\":\"officeId\",\"displayName\":\"${officeId}\",\"validations\":{\"length\":{\"min\":\"10\",\"max\":\"255\"}},\"annotations\":{},\"required\":{\"roles\":[\"admin\",\"user\"]},\"permissions\":{\"view\":[\"admin\"],\"edit\":[\"admin\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "d27c5be9-9885-41d7-a55b-a5957902d6cb",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["9f4fb6ea-064d-48a3-91e3-432cada8b437"],
          "secret": ["S4gixKSiH5oScS6j6FDJBg"],
          "priority": ["100"]
        }
      },
      {
        "id": "7fcfb1a4-4ace-40a3-aff8-b955e78891f8",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAjLqM8EKN2YmpMdE121yDHt6yWTWvzbXMb0Ciyly9rB9sGOmhyuHvs3P06Yl/cbzidxfpcuEThTIIw+PkPbNMm0BkvdTd/orvkFP/1f/CotSxhSypQGUme8S0EvURSwOGel/8rNkFTvgEjYsRQGZSHL+icgd8ZmTQG4jISYxFCXb47eoB4RoeszJ/UYHuWxGUYhY7JxlXM4LJES9do/0QtsiitCEXlSSBmTEZDZPXzvT9NPsVopQLtlSS4KK4LeiV/YF7Ipqd0iAgT/pMyq8oLFmo/YdpCpFjMjbGts6QvVYDaywqC6RFsOo2xjJnjjUPaoV+RudU0NyrNM10GXPuPwIDAQABAoIBAACnuT0kOUqdwa0B66vS4ja5d5VRaDk71sZCQ+NPhI4Yz1p4HcK27pDA3o8/x4PkQ6xQC4UT158zWRlSJhE2Iu3VN5Sg4/bNaQJVc47MKVx67efB7bGR8abPo2fevm76TeP42YpMd3dqbfWp2TGaATy/sW0/z6w7QM9xyLB7aZX6zH5UJCq4FomMe/Tm8+b+GDNYHgvwiucc0tSDMVs1Ek6RWSxYaoEHnrb5KDEMrV57O/0o6MUbxTekGmi5H7Bc5AR35EvP416JxvjMOBjeZHSzKYKjyJb8rk7vNvjvNqNhpV7mSxlnqbQnTskwL09cqMkUECMH2oJXcECksqbTqvECgYEAvt+J2Y2NbsTbobpL9eTjqEq9uC30b41MWrlQQKPNex5rFvU3bhs2EemvIGEEKcXZAkRHsNLA4RvUCyxaY7TlzDdS7yGAaOsKyYeSRrt3TbKzQ+0Mwxra4e4rF5jNW+cd/NMPXi1a/lwcEOmMiNSM3bdQyUvk5gIg6sy9JkXDiUsCgYEAvL75MUzPUMWUz2Awol3Bte5uprlxNALsRVJCOt7TI2pqEbCHD76g5lTQDNL8xstCjehNdoKNiFLqNPi61tx2oRsYFykI/nk7mZwmYx54L+Lxi6PPYoomCSPRB46nIp/otiXphdQjPokYgA/al1IziY2ThjIFbeXlw7GpOkZ2al0CgYEAlG+W7l7MvHXPL8iHRiTIfpoRTGhAjXffBzbSGFLKe5K+SU5N2wzCUc/fZ1jLOgkoqECdV/+uC+HuVvoZGS0XAGeN0XXGPNF8xBjwQp2LPBtamdqBcEE0Mztau7ETEwN7KKCidOTkvKa5FNXreoWBPvNOmhyxV8YT/0VVW6wpUl0CgYBAAULfxPxIl7fu2t+jL8gQudosD5aj3JniqBJthEJ1MBDoDsS+QhauBPTIZIPzpdnb5XrfRUZZhESH0hEJ65kO6PEyaWfzY4kifiFGW37GPl9KyzH4aICdeNfZiDaFN1Ti79hQ2a9Z9YOpabbmualga/Iq/6t3qQ5RXl3UtTBSwQKBgA+g+GDpsejdTmgkFkKuubJKZsY5a8VlVysnVeWYEM6hsYavkximVXo/djLX7Ovma917tCIXjN2dpvhPKZl6u/+7nhqHCNxEBu9I5N5filXTfiH9J3gQkIwGsrVlPGzDsBzkr9q93CvXo3xWVzSB1TaIlgFKH1W58xD9QvSBtbJH"
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICmzCCAYMCBgGQADeOhTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtd2FndWUwHhcNMjQwNjEwMDMzNDE5WhcNMzQwNjEwMDMzNTU5WjARMQ8wDQYDVQQDDAZtd2FndWUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCMuozwQo3Ziakx0TXbXIMe3rJZNa/NtcxvQKLKXL2sH2wY6aHK4e+zc/TpiX9xvOJ3F+ly4ROFMgjD4+Q9s0ybQGS91N3+iu+QU//V/8Ki1LGFLKlAZSZ7xLQS9RFLA4Z6X/ys2QVO+ASNixFAZlIcv6JyB3xmZNAbiMhJjEUJdvjt6gHhGh6zMn9Rge5bEZRiFjsnGVczgskRL12j/RC2yKK0IReVJIGZMRkNk9fO9P00+xWilAu2VJLgorgt6JX9gXsimp3SICBP+kzKrygsWaj9h2kKkWMyNsa2zpC9VgNrLCoLpEWw6jbGMmeONQ9qhX5G51TQ3Ks0zXQZc+4/AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAH2YJXN25zkD1oXZJSXS4gNYAmWm/ylMVMBC/IqVWJG9xNTwbFSY9EZAsyfdbr4bHz3Qy66EzAmREWTzDXQBSWxtitiF9mEBWYOy5/3cp295hrMf/IQ3NXjUB7/mze/HuxDxhAQUPrWneKGDjMZ3fFPYOqy05fag1o8QOzOZRoRBPrOEBLlAI1C9Zt7hv2lMIDXs82EeKrJsXrG9ZJcDuYdU6W/IX6bej+GgpVSgVOlKzaTm7ARzkhTCXXIKYBQzn+GRXro7wlNYf1dKDHLFmxv5r0IoJG+frAMJABIRatYbJ5pHAwJHyWJ/5XBwUOoCnYqm0vaXeJHF91m1wZJqkKc="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "e870cca5-ef90-47e4-9197-8eb48d2c9b23",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["58e44d87-1fe7-46af-911f-0de35c4e38db"],
          "secret": [
            "Zy-FvSWTMntn92Z_GdGcDJgSWz-tfkOMqC7DzaCuxPSDddsoIfuc_XQbD8NKk1e65sQjnhZXArLigcIEaUiMi--Fi8-MvGkt-XTDkH7kS8KjsJ0_zU9oJt1xieJu9JhcmODSaQ3zSIzCpAc30mTQuNmH694YqSIqx0Bc-xRNIok"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "bf81fec3-74ff-467d-97e2-bae4978fa97f",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAwtXMhZAE7o6f9HhyztoGtnMI2mi/AiGwup9kbvN+TbdAyQstjAgOj/1Ab87a3ciyVjjMbjRELQFJLZ3rwG7kPT3Dm9rnC4pCS/tRTIq56QkPT1GSJ3qadEdTDKUuOvOivwmh6wBJn6Rj5snjuAAjweVwg1sBr609DvBqiagTlOR/0+RZRbBKChMPdrZ2c9x/lI+DBnJKL5bNMeb4Jl3n+5viGtNb571u0EOQZtQCF+7HiSkRGT8yHyYY99T0F0Lr2qPJodL6Mspr5QIGAuVVwFG9AqgRcOKEY3Qr/cIiaZpDEsAKTQMiGlrJr/qcBBGqVlis/LSNYf3aSRTnZojZoQIDAQABAoIBADmTIWWEqhhu2DDPmSmsPxiSRNb55hv0pbt4V5774GKJ2SCv520+gkMllPGVYJLyeFTHYw3b7xuXii7rQFv0yQiZ5GB9nxIHcNDwOtWSFx8YmMgZNEXrUpIy84VEmLU+AuVOLOV7h8Yft4/fMCZTED3/lbCTZ5uo52avP+Re4S55lZTexHH3asomoPZa80Wo8dwAgRJtmpd20n8+Zy8cH4jVBLre6A4d454yBCnOpfDLnKFRy3Rb5VUwgCKaIRBjBKbSEjFPTBsNrNk4zkiyoUWCIk20L6b3Ro/04RR9mjk3n2Sau6IxpUyHSZwlcSmJMXY/r4650y+vQ2cO4ApvizsCgYEA4nNbiY2z5hHYAbb6OXfGzGWqdJ9jJ33QTv/V19UC9WBGf2H7npAxXbmBEnvxIxdOgQ5FeeRgUCIEbmBJtpuIs129DTs/YYTJ/DJcoyR/sfxs0zCEexdTzBIEgRhbaiGLpKMBYGm5Pb+RHEXihvjVtvfF5tfChtFHpEnGU3rz2U8CgYEA3EJRhtCAdjeYebMgNadKYE8p1Qp5FvtU/AYGBFIGfdHz2BDgowRBv4PijJDxKfJWAcvrsKnpN55Q4so4jhPY39NZQzn2q/Rcc/gFuVogDo6p6gcjuK1CYAA6VhLKt2y1Puv49Hf+z1P3Pz54vxpP4L0J8XMwP0sQJlr2NaCLgg8CgYArfC2Cz6RRNPH++k04xeh2Dbva41SeG8npsbU12iDUT+WZxo4UF+py7hF8JDLdIzefDseGrbVVDgM90t205E8u6nxIUy1Lo71J4b3qUjL3Udrv/ywhmwwrbvZQeAXt7n0rY2X7RrIcynGqNT1X3+biWNg3CQ3A5+VTBhvAoia7fwKBgHsyuQkwPHpjNGz17VE1ZluiS+K2ve5F3E4vTFREUQ81TTAQmKV17xShPymitNHik4rjtcwV7bXHXrTLqYCGx2rCe44nsLqTrtbK5uC68W1TDOUy4x8cAiFSX07fqfWY33P3Z0POjn8HFyeP2NgDbqRk+FfONzFf2gOqI0bxqravAoGADyd6s0BsV/w2vWwedXFwf4OjdGF0jFKhRQ0j5E5ZaIRZRSIRrj/KAU7W3V6Dt1dRHn1bWg7lv43FWh7RNsBA4FBHmwp6hZSB1A92IfwrnnwR69Qs7FZPcr2CiAz5B79sX7x7bp11624bd1rn1A9LFyNz/w9CDdDUjIwnKw4EhIg="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICmzCCAYMCBgGQADePJDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtd2FndWUwHhcNMjQwNjEwMDMzNDE5WhcNMzQwNjEwMDMzNTU5WjARMQ8wDQYDVQQDDAZtd2FndWUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDC1cyFkATujp/0eHLO2ga2cwjaaL8CIbC6n2Ru835Nt0DJCy2MCA6P/UBvztrdyLJWOMxuNEQtAUktnevAbuQ9PcOb2ucLikJL+1FMirnpCQ9PUZInepp0R1MMpS4686K/CaHrAEmfpGPmyeO4ACPB5XCDWwGvrT0O8GqJqBOU5H/T5FlFsEoKEw92tnZz3H+Uj4MGckovls0x5vgmXef7m+Ia01vnvW7QQ5Bm1AIX7seJKREZPzIfJhj31PQXQuvao8mh0voyymvlAgYC5VXAUb0CqBFw4oRjdCv9wiJpmkMSwApNAyIaWsmv+pwEEapWWKz8tI1h/dpJFOdmiNmhAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACWsg9vPzN9rp+Lz/bNKywBlEwiLLMFG2zGhJm0cK4kbk+QPfxHMtodithS6J9u2awuGj0Lwz7oaRhpPQaWH0d+te9CI0bBlzkil8V1QbK6CBXy0/FrvKa/HHmxAMPYnOC9fq5k1hec+azeUazJ6IM7RDntkb6OUB9LZYrdXerNCUout0I1o6M75+uoiRrllAHJOUR8H++pow7f3s7wC777BvoKHTwelhIF75raVRWkxIN3sihs8q3Fh908jSbArtsePu9HZ3W66Ai2WXqr2XuyirMF2oncamLv1Dj1M+RrypScFAvKoH1ZF5Ob0z2rjq8OWIL7IO/MCCbonFBwP45A="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "13df36cb-4c92-4860-aa8c-20c8aa4ee978",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "83c9e1ba-8c08-469b-a766-aacc59b3865d",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "95ae4046-f01b-4a81-aea4-37cd7fe17f30",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "56d0e674-edfb-40a3-94b6-b2f44d626534",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "95408800-55bb-478f-a730-f507ec83f661",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6ee97eb6-a7b1-47ab-96b4-bcc7438f5828",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e2dd962a-dff3-4d8e-9d66-d89a8d76a0ce",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9e71dc84-88ed-4856-bbcd-f8b10f810303",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1e299bc2-67eb-4d70-bb6c-1fff72a8e897",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5c80a892-a4e3-406b-9109-25809c4d1b3b",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d38c76ec-c616-48fb-9429-e3660af2ad6f",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "392b3c36-5522-41b0-b9bd-21f83e20353b",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "589697bc-d753-414a-8670-87ea674c2ac0",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e1b251e6-b7e9-4e3f-ba60-d9a52ed665f7",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bf8012f8-f5fa-4549-ad37-02474b251b1e",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "049e5d28-4ef9-486b-bb8f-6ea9a98d6b86",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "75c8ea53-9916-46c3-8e09-2f77dd50f331",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "12b8cc98-eaee-4038-9869-948a8805c8f1",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "927134cc-6d59-4006-8921-1aca32cd30cc",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "b0d1d602-0d25-4936-abe0-ae3590dc9cd8",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.verify-email": "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.execute-actions": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "1800",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}",
    "shortVerificationUri": "",
    "actionTokenGeneratedByUserLifespan.reset-credentials": ""
  },
  "keycloakVersion": "24.0.4",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}

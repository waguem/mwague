// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise";
import { OpenAPI } from "./core/OpenAPI";
import { request as __request } from "./core/request";
import type {
  PingApiV1PingGetResponse,
  GetVersionApiV1VersionGetResponse,
  GetOrganizationsApiV1OrgOrganizationGetResponse,
  CreateOrganizationApiV1OrgOrganizationPostData,
  CreateOrganizationApiV1OrgOrganizationPostResponse,
  GetOrgOfficesApiV1OrgOrganizationOfficeGetResponse,
  CreateOfficeApiV1OrgOrganizationOfficePostData,
  CreateOfficeApiV1OrgOrganizationOfficePostResponse,
  GetOfficeApiV1OrgOrganizationOfficeOfficeIdGetData,
  GetOfficeApiV1OrgOrganizationOfficeOfficeIdGetResponse,
  GetEmployeesApiV1OrgOfficeEmployeeGetResponse,
  CreateEmployeeApiV1OrgOfficeEmployeePostData,
  CreateEmployeeApiV1OrgOfficeEmployeePostResponse,
  GetOfficeEmployeesApiV1OrgOfficeOfficeIdEmployeeGetData,
  GetOfficeEmployeesApiV1OrgOfficeOfficeIdEmployeeGetResponse,
  GetEmployeeApiV1OrgOfficeEmployeeMeGetResponse,
  UpdateEmployeeApiV1OrgOfficeEmployeeEmployeeIdAssignPutData,
  UpdateEmployeeApiV1OrgOfficeEmployeeEmployeeIdAssignPutResponse,
} from "./types.gen";

/**
 * Ping
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const pingApiV1PingGet = (): CancelablePromise<PingApiV1PingGetResponse> => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/ping",
  });
};

/**
 * Get Version
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getVersionApiV1VersionGet = (): CancelablePromise<GetVersionApiV1VersionGetResponse> => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/version",
  });
};

/**
 * Get Organizations
 * @returns OrganizationResponse Successful Response
 * @throws ApiError
 */
export const getOrganizationsApiV1OrgOrganizationGet =
  (): CancelablePromise<GetOrganizationsApiV1OrgOrganizationGetResponse> => {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/org/organization",
    });
  };

/**
 * Create Organization
 * @param data The data for the request.
 * @param data.requestBody
 * @returns OrganizationResponse Successful Response
 * @throws ApiError
 */
export const createOrganizationApiV1OrgOrganizationPost = (
  data: CreateOrganizationApiV1OrgOrganizationPostData
): CancelablePromise<CreateOrganizationApiV1OrgOrganizationPostResponse> => {
  return __request(OpenAPI, {
    method: "POST",
    url: "/api/v1/org/organization",
    body: data.requestBody,
    mediaType: "application/json",
    errors: {
      422: "Validation Error",
    },
  });
};

/**
 * Get Org Offices
 * Retrieve a list of offices for the organization.
 *
 * Args:
 * user (KcUser): The authenticated user object.
 * db (Session, optional): The database session. Defaults to Depends(get_db).
 *
 * Returns:
 * List[protocol.OfficeResponse]: A list of office responses.
 * @returns OfficeResponse Successful Response
 * @throws ApiError
 */
export const getOrgOfficesApiV1OrgOrganizationOfficeGet =
  (): CancelablePromise<GetOrgOfficesApiV1OrgOrganizationOfficeGetResponse> => {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/org/organization/office",
    });
  };

/**
 * Create Office
 * Create a new office.
 *
 * Args:
 * user: The authenticated user making the request.
 * create_office: The request payload containing the details of the office to be created.
 * db: The database session.
 *
 * Returns:
 * The response containing the created office details.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns OfficeResponse Successful Response
 * @throws ApiError
 */
export const createOfficeApiV1OrgOrganizationOfficePost = (
  data: CreateOfficeApiV1OrgOrganizationOfficePostData
): CancelablePromise<CreateOfficeApiV1OrgOrganizationOfficePostResponse> => {
  return __request(OpenAPI, {
    method: "POST",
    url: "/api/v1/org/organization/office",
    body: data.requestBody,
    mediaType: "application/json",
    errors: {
      422: "Validation Error",
    },
  });
};

/**
 * Get Office
 * Retrieve an office by ID.
 *
 * Args:
 * user (KcUser): The authenticated user object.
 * office_id (int): The ID of the office to retrieve.
 * db (Session, optional): The database session. Defaults to Depends(get_db).
 *
 * Returns:
 * protocol.OfficeResponse: The office response.
 * @param data The data for the request.
 * @param data.officeId
 * @returns OfficeResponse Successful Response
 * @throws ApiError
 */
export const getOfficeApiV1OrgOrganizationOfficeOfficeIdGet = (
  data: GetOfficeApiV1OrgOrganizationOfficeOfficeIdGetData
): CancelablePromise<GetOfficeApiV1OrgOrganizationOfficeOfficeIdGetResponse> => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/org/organization/office/{office_id}",
    path: {
      office_id: data.officeId,
    },
    errors: {
      422: "Validation Error",
    },
  });
};

/**
 * Get Employees
 * @returns EmployeeResponse Successful Response
 * @throws ApiError
 */
export const getEmployeesApiV1OrgOfficeEmployeeGet =
  (): CancelablePromise<GetEmployeesApiV1OrgOfficeEmployeeGetResponse> => {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/org/office/employee",
    });
  };

/**
 * Create Employee
 * Create a new employee.
 *
 * Args:
 * user (KcUser): The authenticated user making the request.
 * db (Session, optional): The database session. Defaults to Depends(get_db).
 *
 * Returns:
 * Employee: The created employee.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns EmployeeResponse Successful Response
 * @throws ApiError
 */
export const createEmployeeApiV1OrgOfficeEmployeePost = (
  data: CreateEmployeeApiV1OrgOfficeEmployeePostData
): CancelablePromise<CreateEmployeeApiV1OrgOfficeEmployeePostResponse> => {
  return __request(OpenAPI, {
    method: "POST",
    url: "/api/v1/org/office/employee",
    body: data.requestBody,
    mediaType: "application/json",
    errors: {
      422: "Validation Error",
    },
  });
};

/**
 * Get Office Employees
 * @param data The data for the request.
 * @param data.officeId
 * @returns EmployeeResponse Successful Response
 * @throws ApiError
 */
export const getOfficeEmployeesApiV1OrgOfficeOfficeIdEmployeeGet = (
  data: GetOfficeEmployeesApiV1OrgOfficeOfficeIdEmployeeGetData
): CancelablePromise<GetOfficeEmployeesApiV1OrgOfficeOfficeIdEmployeeGetResponse> => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/org/office/{office_id}/employee",
    path: {
      office_id: data.officeId,
    },
    errors: {
      422: "Validation Error",
    },
  });
};

/**
 * Get Employee
 * @returns EmployeeResponse Successful Response
 * @throws ApiError
 */
export const getEmployeeApiV1OrgOfficeEmployeeMeGet =
  (): CancelablePromise<GetEmployeeApiV1OrgOfficeEmployeeMeGetResponse> => {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/org/office/employee/me",
    });
  };

/**
 * Update Employee
 * @param data The data for the request.
 * @param data.employeeId
 * @param data.requestBody
 * @returns EmployeeResponse Successful Response
 * @throws ApiError
 */
export const updateEmployeeApiV1OrgOfficeEmployeeEmployeeIdAssignPut = (
  data: UpdateEmployeeApiV1OrgOfficeEmployeeEmployeeIdAssignPutData
): CancelablePromise<UpdateEmployeeApiV1OrgOfficeEmployeeEmployeeIdAssignPutResponse> => {
  return __request(OpenAPI, {
    method: "PUT",
    url: "/api/v1/org/office/employee/{employee_id}/assign",
    path: {
      employee_id: data.employeeId,
    },
    body: data.requestBody,
    mediaType: "application/json",
    errors: {
      422: "Validation Error",
    },
  });
};

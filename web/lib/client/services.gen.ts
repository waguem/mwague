// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise";
import { OpenAPI } from "./core/OpenAPI";
import { request as __request } from "./core/request";
import type {
  PingApiV1PingGetResponse,
  GetVersionApiV1VersionGetResponse,
  RootApiV1AuthSecureGetResponse,
  GetOrganizationsApiV1OrgOrganizationGetResponse,
  CreateOrganizationApiV1OrgOrganizationPostData,
  CreateOrganizationApiV1OrgOrganizationPostResponse,
} from "./types.gen";

/**
 * Ping
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const pingApiV1PingGet = (): CancelablePromise<PingApiV1PingGetResponse> => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/ping",
  });
};

/**
 * Get Version
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getVersionApiV1VersionGet = (): CancelablePromise<GetVersionApiV1VersionGetResponse> => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/version",
  });
};

/**
 * Root
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const rootApiV1AuthSecureGet = (): CancelablePromise<RootApiV1AuthSecureGetResponse> => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/auth/secure",
  });
};

/**
 * Get Organizations
 * @returns OrganizationResponse Successful Response
 * @throws ApiError
 */
export const getOrganizationsApiV1OrgOrganizationGet =
  (): CancelablePromise<GetOrganizationsApiV1OrgOrganizationGetResponse> => {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/org/organization",
    });
  };

/**
 * Create Organization
 * @param data The data for the request.
 * @param data.requestBody
 * @returns OrganizationResponse Successful Response
 * @throws ApiError
 */
export const createOrganizationApiV1OrgOrganizationPost = (
  data: CreateOrganizationApiV1OrgOrganizationPostData
): CancelablePromise<CreateOrganizationApiV1OrgOrganizationPostResponse> => {
  return __request(OpenAPI, {
    method: "POST",
    url: "/api/v1/org/organization",
    body: data.requestBody,
    mediaType: "application/json",
    errors: {
      422: "Validation Error",
    },
  });
};
